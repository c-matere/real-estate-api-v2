version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: real-estate-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: realestate
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:6-alpine
    container_name: real-estate-redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Backend API - Containerized API service
  api:
    build:
      context: ./real-estate-api
      dockerfile: Dockerfile
    container_name: real-estate-api
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PASS: postgres
      DB_NAME: realestate
      REDIS_URL: redis://redis:6379
      FORCE_SYNC: "false"
      MOCK_API: "false"
      DEBUG_API: "false"
      MOCK_AUTH: "false"
      SECURITY_DISABLED: "false"
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      SESSION_SECRET: ${SESSION_SECRET:-your-session-secret}
      TOGETHER_API_KEY: ${TOGETHER_API_KEY:-}
      TOGETHER_MODEL_ID: ${TOGETHER_MODEL_ID:-}
      # CORS Configuration
      CORS_ORIGINS: "${CORS_ORIGINS:-http://localhost:3000,http://localhost:3001,https://entity1.alphask.entorach.site,https://api-entity1.onrender.com}"
      CORS_METHODS: "${CORS_METHODS:-GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS}"
      CORS_CREDENTIALS: "${CORS_CREDENTIALS:-true}"
      CORS_MAX_AGE: "${CORS_MAX_AGE:-86400}"
      FRONTEND_URL: "http://localhost:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - app-network

  # Frontend Dashboard
  dashboard:
    build:
      context: ./real-estate-dashboard
      args:
        - REACT_APP_API_URL=http://localhost:5000
    container_name: real-estate-dashboard
    ports:
      - "80:80"
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:

networks:
  app-network:
    driver: bridge
  api-code: